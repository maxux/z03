request_t __request[] = {
	{
		.match    = ".weather",
		.callback = action_weather,
		.man      = "print weather information from meteobelgique: .weather list, .weather [station]",
		.hidden   = 0,
		.syntaxe  = ".weather <station>, .weather list (setting variable: weather)",
	},
	{
		.match    = ".wunder",
		.callback = action_wunder,
		.man      = "print weather information from wunderground",
		.hidden   = 0,
		.syntaxe  = ".wunder <country/city> (setting variable: wunder)",
	},
	{
		.match    = ".ping",
		.callback = action_ping,
		.man      = "ping request/reply",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{		
		.match    = ".time",
		.callback = action_time,
		.man      = "print the time",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".rand",
		.callback = action_random,
		.man      = "random number generator",
		.hidden   = 0,
		.syntaxe  = ".rand, .rand <max>, .rand <min> <max>",
	},
	{
		.match    = ".stats",
		.callback = action_stats,
		.man      = "print url statistics",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".chart",
		.callback = action_chart,
		.man      = "print a chart about url usage",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".chartlog",
		.callback = action_chartlog,
		.man      = "chart of lines log",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".uptime",
		.callback = action_uptime,
		.man      = "print the bot's uptime",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".dns",
		.callback = action_dns,
		.man      = "resolve a dns name address",
		.hidden   = 0,
		.syntaxe  = ".dns <hostname>",
	},
	{
		.match    = ".rdns",
		.callback = action_rdns,
		.man      = "resolve a reverse dns address",
		.hidden   = 0,
		.syntaxe  = ".rdns <ipv4 address>",
	},
	{
		.match    = ".count",
		.callback = action_count,
		.man      = "print some statistics about someone",
		.hidden   = 0,
		.syntaxe  = ".count, .count <nick>",
	},
	{
		.match    = ".known",
		.callback = action_known,
		.man      = "parse regexp and show which known nick match",
		.hidden   = 0,
		.syntaxe  = ".known <regexp>",
	},
	{
		.match    = ".url",
		.callback = action_url,
		.man      = "search on url database, by url or title. Use % as wildcard",
		.hidden   = 0,
		.syntaxe  = ".url <keywords> (use %% as wildcard)",
	},
	{
		.match    = ".goo",
		.callback = action_google,
		.man      = "search on Google, print the first result",
		.hidden   = 0,
		.syntaxe  = ".goo <keywords>",
	},
	{
		.match    = ".google",
		.callback = action_google,
		.man      = "search on Google, print the 3 firsts result",
		.hidden   = 0,
		.syntaxe  = ".google <keywords>",
	},
	{
		.match    = ".help",
		.callback = action_help,
		.man      = "print the list of all the commands available",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".man",
		.callback = action_man,
		.man      = "print 'man page' of a given bot command",
		.hidden   = 0,
		.syntaxe  = ".man <command name> (without prefix)",
	},
	{
		.match    = ".note",
		.callback = action_notes,
		.man      = "leave a message to someone, will be sent when connecting.",
		.hidden   = 0,
		.syntaxe  = ".note, .note <nick> <message>",
	},
	{
		.match    = ".c",
		.callback = action_run_c,
		.man      = "compile and run c code, from arguments",
		.hidden   = 0,
		.syntaxe  = ".c <c code> eg: .c printf(\"Hello world\\n\");",
	},
	{
		.match    = ".python",
		.callback = action_run_py,
		.man      = "compile and run inline python code, from arguments",
		.hidden   = 0,
		.syntaxe  = ".python <python code> eg: .py print('Hello world')",
	},
	{
		.match    = ".haskell",
		.callback = action_run_hs,
		.man      = "compile and run inline haskell code, from arguments",
		.hidden   = 0,
		.syntaxe  = ".haskell <haskell code> eg: .hs print \"Hello\"",
	},
	{
		.match    = ".php",
		.callback = action_run_php,
		.man      = "compile and run inline php code, from arguments",
		.hidden   = 0,
		.syntaxe  = ".php <php code> eg: .php echo \"Hello\";",
	},
	{
		.match    = ".backlog",
		.callback = action_backlog,
		.man      = "print last lines",
		.hidden   = 0,
		.syntaxe  = ".backlog, .backlog <nick>",
	},
	{
		.match    = ".wi",
		.callback = action_wiki,
		.man      = "summary a wiki's international article",
		.hidden   = 0,
		.syntaxe  = ".wi <lang> <keywords>",
	},
	{
		.match    = ".wiki",
		.callback = action_wiki,
		.man      = "summary an english wikipedia's article",
		.hidden   = 0,
		.syntaxe  = ".wiki <keywords>",
	},
	{
		.match    = ".set",
		.callback = action_set,
		.man      = "set a variable value",
		.hidden   = 0,
		.syntaxe  = ".set <variable name> <value>",
	},
	{
		.match    = ".get",
		.callback = action_get,
		.man      = "get a variable value",
		.hidden   = 0,
		.syntaxe  = ".get <nick> <variable name>, .get <variable name>",
	},
	{
		.match    = ".unset",
		.callback = action_unset,
		.man      = "unset a variable value",
		.hidden   = 0,
		.syntaxe  = ".unset <variable name>",
	},
	{
		.match    = ".fm",
		.callback = action_lastfm,
		.man      = "print now playing lastfm title",
		.hidden   = 0,
		.syntaxe  = ".fm, .fm <lastfm nick>, .fm $(<irc nick>), setting variable: lastfm",
	},
	{
		.match    = ".fmlove",
		.callback = action_lastfmlove,
		.man      = "love your current track on last.fm",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".calc",
		.callback = action_calc,
		.man      = "google calculator query",
		.hidden   = 0,
		.syntaxe  = ".calc <query>",
	},
	{
		.match    = ".delay",
		.callback = action_delay,
		.man      = "alarm timed notification",
		.hidden   = 0,
		.syntaxe  = ".delay <1-2880 minutes> <message>",
	},
	{
		.match    = ".ovh",
		.callback = action_ovh,
		.man      = "",
		.hidden   = 0,
		.syntaxe  = "",
	},
	{
		.match    = ".blowjob",
		.callback = action_blowjob,
		.man      = "",
		.hidden   = 1,
		.syntaxe  = "",
	},
};
